<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://royongk.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://royongk.github.io/" rel="alternate" type="text/html" /><updated>2021-08-04T11:16:32+09:00</updated><id>https://royongk.github.io/feed.xml</id><title type="html">Royong’s Blog</title><subtitle>Programming issues and personal thoughts</subtitle><entry><title type="html">Django 웹 프레임워크</title><link href="https://royongk.github.io/python-django" rel="alternate" type="text/html" title="Django 웹 프레임워크" /><published>2021-08-02T22:20:00+09:00</published><updated>2021-08-02T22:20:00+09:00</updated><id>https://royongk.github.io/python-django</id><content type="html" xml:base="https://royongk.github.io/python-django">&lt;p&gt;&lt;strong&gt;&lt;em&gt;This article contains personal thoughts. Please leave a comment on the parts that need to be revised.&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;이 글은 개인적인 견해가 포함되어 있습니다. 수정이 필요한 부분은 의견을 남겨주시기 바랍니다.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;django란&quot;&gt;Django란?&lt;/h4&gt;
&lt;p&gt;Django는 파이썬으로 만들어진 무료 오픈소스 웹 애플리케이션 프레임워크 입니다. 
유지보수가 편리한 웹사이트를 신속하게 개발 하도록 돕는 구성요소로 이루어진 웹 프레임워크 입니다.&lt;/p&gt;

&lt;p&gt;웹 사이트 개발 시 인증 관리, 관리자 페이지 등 고려 해야할 부분들이 기능들을 제공하기 때문에 똑같은 작업을 하는 시간을 줄여줄 수 있습니다. 
물론 다른 컴포넌트들을 사용하기 위해 확장될 수도 있습니다.&lt;/p&gt;

&lt;p&gt;Django 코드는 유지보수가 쉽고 재사용하기 좋게 하는 패턴을 이용하여 작성됩니다. 
이 구조를 장고는 “모델 뷰 템플릿(Model View Template)(MVT)” 아키텍처라고 부릅니다.&lt;br /&gt;
Model View Controller 아키텍처와 유사합니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;URLs&lt;/strong&gt;&lt;br /&gt;
URL mapper는 요청 URL을 기준으로 HTTP 요청을 적절한 뷰(view)로 보내주기 위해 사용됩니다. 또한 URL mapper는 URL에 나타나는 특정한 문자열이나 숫자의 패턴을 일치시켜 데이터로서 뷰 함수에 전달할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Models&lt;/strong&gt;&lt;br /&gt;
응용 프로그램의 데이터 구조를 정의하고 데이터베이스의 기록을 관리하는 방법을 제공하는 파이썬 객체입니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;View&lt;/strong&gt;&lt;br /&gt;
HTTP 요청을 수신하고 HTTP 응답을 반환하는 요청 처리 함수입니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Templates&lt;/strong&gt;&lt;br /&gt;
파일의 구조나 레이아웃을 정의하고 실제 내용을 보여주는데 사용되는 텍스트 파일입니다. 템플릿이 꼭 HTML 타입일 필요는 없습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;django-설치-하기&quot;&gt;Django 설치 하기&lt;/h4&gt;
&lt;p&gt;python이 설치되어 있다는 가정하에 Windows 10 OS를 기준으로 진행 해보겠습니다.&lt;/p&gt;

&lt;p&gt;Django를 설치 하기 전에 개발 환경을 깔끔하게 관리하기 위해 가상 환경(Virtual environment)을 먼저 설치하고 그 안에 Django를 설치 하겠습니다.&lt;/p&gt;

&lt;p&gt;원하는 위치로 이동한 후에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;djangoSample&lt;/code&gt; 이라는 폴더를 생성 합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;&amp;gt; mkdir djangoSample
&amp;gt; cd djangoSample
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;samplevenv&lt;/code&gt; 이름으로 가상환경을 생성 합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;&amp;gt; python -m venv samplevenv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;생성이 완료되면 폴더가 생성되고 해당 폴더에 사용할 가상환경이 생성 됩니다. 
생성 된 가상환경을 사용하기 위해서는 명령어를 입력해 가상환경을 실행해야 합니다.&lt;br /&gt;
콘솔의 프롬프트 앞에 접두어가 붙어있다면 가상환경이 시작된 것을 알 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;&amp;gt; sampleenv\Scripts\activate.bat
(sampleenv) &amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;가상환경의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt;가 최신 버전인지 확인한 후 django를 설치합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;(sampleenv) &amp;gt; python -m pip install --upgrade pip
Collecting pip
  Downloading pip-21.2.2-py3-none-any.whl (1.6 MB)
     |████████████████████████████████| 1.6 MB 45 kB/s
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.1.1
    Uninstalling pip-20.1.1:
      Successfully uninstalled pip-20.1.1
Successfully installed pip-21.2.2

(sampleenv) &amp;gt; pip install django
Collecting django
  Downloading Django-3.2.6-py3-none-any.whl (7.9 MB)
     |████████████████████████████████| 7.9 MB 26 kB/s
Collecting sqlparse&amp;gt;=0.2.2
  Using cached sqlparse-0.4.1-py3-none-any.whl (42 kB)
Collecting asgiref&amp;lt;4,&amp;gt;=3.3.2
  Downloading asgiref-3.4.1-py3-none-any.whl (25 kB)
Collecting pytz
  Using cached pytz-2021.1-py2.py3-none-any.whl (510 kB)
Collecting typing-extensions
  Using cached typing_extensions-3.10.0.0-py3-none-any.whl (26 kB)
Installing collected packages: typing-extensions, sqlparse, pytz, asgiref, django
Successfully installed asgiref-3.4.1 django-3.2.6 pytz-2021.1 sqlparse-0.4.1 typing-extensions-3.10.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt; 명령어를 통해 django가 설치된 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;(sampleenv) &amp;gt; pip list
Package           Version
----------------- --------
asgiref           3.4.1
Django            3.2.6
pip               21.2.2
pytz              2021.1
setuptools        47.1.0
sqlparse          0.4.1
typing-extensions 3.10.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;django-프로젝트-시작하기&quot;&gt;Django 프로젝트 시작하기&lt;/h4&gt;
&lt;p&gt;개발이 가능한 환경을 구성했으니 간단한 웹사이트를 만들어보겠습니다.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;django-admin&lt;/code&gt; 도구를 이용해 사이트의 기본 토대를 생성할 수 있습니다. 
이 디렉토리와 파일들은 위에서 설명한 MVT 아키텍쳐로 구성이 되는데 파일명을 마음대로 변경해서도 안되고, 이동 해서도 안됩니다. 
Django의 특정한 구조를 유지해야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;samplesite&lt;/code&gt;라는 이름으로 현재 디렉토리에 설치합니다. 원한다면 다른 디렉토리로 이동해서 설치할 수도 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;(sampleenv) &amp;gt; django-admin startproject samplesite .
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;*중요!&lt;br /&gt;
모든 작업은 가상환경(virtualenv) 안에서 해야 합니다. 현재 콘솔 창에서 접두어가 안 보인다면 먼저 활성화해야 합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;스크립트 실행 후 문제가 없다면 아래와 같이 같은 디렉토리 구조가 생성됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;djangosample
├───manage.py
└───samplesite
        asgi.py
        settings.py
        urls.py
        wsgi.py
        __init__.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;이 폴더내에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;manage.py&lt;/code&gt; 스크립트를 이용해 다른 설치 없이 개발용 웹 서버를 시작할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;(sampleenv) &amp;gt; python manage.py runserver
Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).

You have 18 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.
Run 'python manage.py migrate' to apply them.
August 02, 2021 - 15:45:35
Django version 3.2.6, using settings 'samplesite.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CTRL-BREAK.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;서버가 실행되면 웹 브라우저로 만들어진 사이트를 볼 수 있습니다.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://127.0.0.1:8000/&lt;/code&gt; 으로 접속해서 아래와 같은 모습이 보인다면 성공입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/built/images/post-img/2021-08-02/django-runserver.JPG&quot; alt=&quot;django-runserver&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h4 id=&quot;참고&quot;&gt;참고&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Learn/Server-side/Django/Introduction#django%EB%9E%80&quot;&gt;MDN Web Docs&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://docs.djangoproject.com/ko/3.2/&quot;&gt;Django home page&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://tutorial.djangogirls.org/ko/&quot;&gt;Django Girls&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="python" /><summary type="html">This article contains personal thoughts. Please leave a comment on the parts that need to be revised. 이 글은 개인적인 견해가 포함되어 있습니다. 수정이 필요한 부분은 의견을 남겨주시기 바랍니다.</summary></entry><entry><title type="html">What is python?</title><link href="https://royongk.github.io/python-overview" rel="alternate" type="text/html" title="What is python?" /><published>2021-06-27T02:18:00+09:00</published><updated>2021-06-27T02:18:00+09:00</updated><id>https://royongk.github.io/python-overview</id><content type="html" xml:base="https://royongk.github.io/python-overview">&lt;p&gt;&lt;strong&gt;&lt;em&gt;This article contains personal thoughts. Please leave a comment on the parts that need to be revised.&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;이 글은 개인적인 견해가 포함되어 있습니다. 수정이 필요한 부분은 의견을 남겨주시기 바랍니다.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h4 id=&quot;python이-뭘까&quot;&gt;Python이 뭘까?&lt;/h4&gt;
&lt;p&gt;Python은 1991년에 출시 된 인터프리터 방식의 프로그래밍 언어이다.&lt;br /&gt;
귀도 반 로섬(Guido van Rossum)이라는 네덜란드 출신의 프로그래머에 의해 만들어졌으며, 1989년 크리스마스 주에 연구실이 닫혀있어서 심심한 김에(?) 만든 프로그래밍 언어라고 한다.
웹 개발(서버), 소프트 웨어 개발, 수학 등에 쓰이며 2010년도 후반에는 머신러닝, 딥러닝 등 인공지능 개발을 위한 언어로서 각광을 받고 있다.&lt;/p&gt;

&lt;h4 id=&quot;왜-python을-사용할까&quot;&gt;왜 Python을 사용할까?&lt;/h4&gt;
&lt;p&gt;Python은 문법이 쉬워서 초보자들이 프로그래밍을 처음 배울때 추천되는 언어이다. 실제로 영어와 유사한 간단한 구문도 있다.&lt;br /&gt;
그로 인해 개발자가 다른 프로그래밍 언어보다 적은 줄로 프로그램을 작성할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;# 빈값이 아닌지 체크
&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;    
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;프로그래밍 언어는 접근성과 응용력이 좋다는게 굉장히 중요하다. Python은 순수한 프로그램 언어로서의 기능 외에도 다른 언어로 쓰인 모듈들을 연결하는 풀언어(glue language)로써 자주 이용된다.&lt;br /&gt;
다양한 플랫폼에서 쓸 수 있고, 라이브러리(모듈)가 풍부하여, 대학을 비롯한 여러 교육 기관 연구 기관 및 산업계에서 이용이 증가하고 있다.&lt;br /&gt;
Python으로 개발을 하다보면 라이브러리를 찾는게 빠른지, 해당 기능을 구현하는게 빠른지 고민하게 되는 경우도 생길 정도이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Life is short, You need Python”&lt;br /&gt;
인생은 짧으니, 당신은 파이썬이 필요하다.&lt;br /&gt;
(빠른 개발 속도와 생산성으로 인해 개발자들 사이에 생겨난 말이라고 한다..)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;python의-단점&quot;&gt;Python의 단점&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;다른언어에 비해 상대적으로 속도가 느리다.&lt;/strong&gt;&lt;br /&gt;
여러가지 이유가 있을 수 있지만 그 중 하나로 인터프리터 언어이기 때문일 수 있다. 작성한 코드를 한줄씩 읽어 가며 실행하기 때문에 컴파일 언어들에 비해 속도가 느리다.&lt;br /&gt;
다른 동적 언어들을 전체적으로 비교해 봐도 속도가 빠른 편은 아니다. 이에 대한 상세 내용은 &lt;a href=&quot;https://namu.wiki/w/Python&quot;&gt;참조 문서&lt;/a&gt;를 확인하기 바랍니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;동적 타입 언어(dynamically typed language)&lt;/strong&gt;&lt;br /&gt;
동적 타입이냐 정적 타입이냐에 대한 내용은 서로 장단점이 있기 때문에 어떤게 맞는지 명확한 결론을 내리기는 어려울 정도로 논쟁으로 취급 받는다.&lt;br /&gt;
단, 큰 프로젝트에서 자료 구조 설계나 디버깅이 어렵다는 지적으로 인해 단점으로 적용한다. 
그러나 최근에는 테스트 세트로 단점들을 커버하거나 PyCharm과 같은 IDLE 프로그램을 이용해서 도움을 받을 수도 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;그럼-난-어째서-python을-선택-했을까&quot;&gt;그럼 난 어째서 Python을 선택 했을까?&lt;/h4&gt;
&lt;p&gt;인스타그램, 유튜브, reddit 등이 Python을 주로 쓰고 있다고 한다. 외국 구인 사이트에도 Python에 대한 수요가 많다. 
그렇다는 뜻은 Microsoft Service에 대한 라이브러리도 풍부하기 때문에 프로젝트 시 도움이 될 것이라 판단했다. 
그리고 Python은 스크립팅을 주력으로 밀고 있기 때문에 자동화 시스템의 모듈 개발이나 단기 프로젝트에서 빠르게 개발할 수도 있다.&lt;br /&gt;
물론 깊게 파고 들어가면 멀티프로세스, 디자인 패턴, 테스트 기법 등 신경쓸 것도 많고 배경 지식이 필요하다. 
하지만 이런 배경 지식은 프로그래머/개발자에게는 필요한 지식이니 Python이 아니더라도 익혀두어야 한다고 생각한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;핑계 대지말고 방법을 찾자!&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h4 id=&quot;참고&quot;&gt;참고&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://namu.wiki/w/Python&quot;&gt;Python 나무 위키&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://ko.wikipedia.org/wiki/%ED%8C%8C%EC%9D%B4%EC%8D%AC&quot;&gt;Python 위키 백과&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.w3schools.com/python/python_intro.asp&quot;&gt;w3chools&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="python" /><summary type="html">This article contains personal thoughts. Please leave a comment on the parts that need to be revised. 이 글은 개인적인 견해가 포함되어 있습니다. 수정이 필요한 부분은 의견을 남겨주시기 바랍니다.</summary></entry><entry><title type="html">Microsoft Power Platform 소개</title><link href="https://royongk.github.io/ppf-overview" rel="alternate" type="text/html" title="Microsoft Power Platform 소개" /><published>2021-06-20T18:18:00+09:00</published><updated>2021-06-20T18:18:00+09:00</updated><id>https://royongk.github.io/ppf-overview</id><content type="html" xml:base="https://royongk.github.io/ppf-overview">&lt;h4 id=&quot;microsoft-power-platform은-무엇인가&quot;&gt;Microsoft Power Platform은 무엇인가?&lt;/h4&gt;
&lt;p&gt;Power Platform은 복잡한 비즈니스 솔루션을 개발 및 구축하고, 데이터 시각화를 분석 및 그리며, 비즈니스 프로세스를 자동화하거나, 통신을 위한 가상 에이전트를 구축하기 위해 Microsoft에서 제공하는 제품 그룹입니다.&lt;/p&gt;

&lt;p&gt;Power Platform 제품에는 아래와 같습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;제품&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;설명&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Power BI&lt;/td&gt;
      &lt;td&gt;쉽게 데이터 원본에 연결하고, 중요한 항목을 시각화 및 검색하는 데 사용됩니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Power Apps&lt;/td&gt;
      &lt;td&gt;비즈니스 데이터에 연결하는 사용자 지정 비즈니스 앱을 구축하는 데 사용됩니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Power Automate&lt;/td&gt;
      &lt;td&gt;수동 작업을 줄이기 위해 자동화 된 워크 플로를 설계하는 데 사용됩니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Power Virtual Agents&lt;/td&gt;
      &lt;td&gt;고객, 다른 직원 또는 웹 사이트 나 서비스 방문자가 제기한 질문에 답할 수 있는 강력한 챗봇을 개발하는 데 사용됩니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;그동안 비즈니스 솔루션을 개발하기 위해서 특정 프로그래밍 언어를 배우거나, 전문 개발자가 필요했습니다.&lt;br /&gt;
그에 반해 Power Platform은 사용자 또는 개발자가 사용할 수 있는 간단한 GUI 형태이므로 프로그래밍을 배우지 않은 현업 담당자들도 원하는 기능을 구현할 수 있습니다.&lt;/p&gt;

&lt;p&gt;추후 비즈니스 솔루션 개발에 관심이 있으신 분들을 위해 Power Platform 각 도구들의 소개, 이슈 등을 공유하도록 하겠습니다.&lt;/p&gt;

&lt;h4 id=&quot;참고&quot;&gt;참고&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/ko-kr/power-platform/&quot;&gt;Microsoft Power Platform 설명서&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.sqlshack.com/a-quick-overview-of-the-microsoft-power-platform/&quot;&gt;A quick overview of the Microsoft Power Platform&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="powerplatform" /><summary type="html">Microsoft Power Platform은 무엇인가? Power Platform은 복잡한 비즈니스 솔루션을 개발 및 구축하고, 데이터 시각화를 분석 및 그리며, 비즈니스 프로세스를 자동화하거나, 통신을 위한 가상 에이전트를 구축하기 위해 Microsoft에서 제공하는 제품 그룹입니다.</summary></entry></feed>